{"name":"Christopher M. Baker","tagline":"Lead Software Architect, Advanced Systems","body":"#### [James B. Speed School of Engineering, University of Louisville](http://louisville.edu/speed/about)\r\n**Bachelor of Science, Computer Engineering and Computer Science**\r\n<br>Graduated with Honors, 3.294 of 4.000\r\n<br><br>**Master of Engineering, Computer Engineering and Computer Science**\r\n<br>Graduated with Honors, 3.874 of 4.000\r\n\r\n#### [FKI Logistex, Inc.](http://www.intelligrated.com)\r\n**Software Engineer, 2007-2009**\r\n- Responsibilities included design, development, and testing of network applications.\r\n- Created documentation website with SQL back-end as internal software tool.\r\n- Independently researched, reverse engineered, developed and tested a CIP driver.\r\n- Developed human-machine interface to visualize Phoenix Sky Harbor Airport.\r\n- Created embedded manual-encode applications to sort airline baggage in real-time.\r\n- Designed large scale emulations to test PLC code for Raleigh Durham Airport.\r\n- Served as software support, working one-on-one with Fort Lauderdale customer.\r\n\r\n#### [University of Louisville, Dept of Biochemistry and Molecular Biology](http://louisville.edu/medicine/departments/biochemistry)\r\n**Software Engineer, 2010-2011**\r\n- Implemented a multiple sequence alignment web service for a DNA database.\r\n- Created algorithms to resolve genotypes from nucleotide strands against a genome.\r\n- Developed Java applets to visualize, sort, and analyze alignments from web services.\r\n\r\n#### [iAppFusion, LLC](http://www.iappfusion.com)\r\n**Mobile Software Engineer, 2010-2011**\r\n- Designed, developed, and deployed data-driven Windows Phone 7 applications.\r\n- Gave talks about design of products at CGames conference and .NET user groups.\r\n- Created core libraries used by the Windows Phone developer team.\r\n- Engaged in weekly meetings to improve and enrich application user experience.\r\n\r\n#### [General Electric, Appliances and Lighting](http://www.geappliances.com)\r\n**Lead Software Architect, Nucleus, 2010-2013**\r\n- Lead software team to deliver embedded home energy management solution.\r\n- Contributed in daily stand-up meetings to review the status of bugs and features.\r\n- Reviewed contractor development and served as point-of-contact for the team.\r\n\r\n**Software Architect, Advanced Systems, 2010-2013**\r\n- Primary responsibilities included WiFi Connected Appliances and patent generation.\r\n- Developed prototypes and products using Modbus, Zigbee, and Wi-Fi technologies.\r\n- Designed multiple embedded, scalable, and extensible plugin architectures.\r\n- Developed high performance web servers with REST APIs and subscription models.\r\n- Developed embedded module that enabled controlling appliances away from home.\r\n- Contributed in daily stand-up meetings to review the status of bugs and features.\r\n- Created several patents to simplify connectivity and provisioning.\r\n\r\n**Lead Software Architect, Advanced Systems, 2013-Now**\r\n- Primary responsibilities included Appliance-to-Cloud features and patent generation.\r\n- Created web applications for time-based and event-based scheduling of features.\r\n- Designed algorithms for time synchronization and reliable message delivery.\r\n- Created several patents to improve convenience, reliability, and safety.\r\n- Designed and developed a system to track customer interaction on showroom floor.\r\n- Developed tools to auto-generate code, documentation, and tools from a spec.\r\n- Helped create and promote an open-source maker community for appliances.\r\n- Designed and developed the software for the [Green Bean](https://github.com/GEMakers/green-bean).\r\n- Hosted internal and external appliance hack-a-thons.\r\n- Software support for [1B](https://firstbuild.com) at [Makercon](http://makercon.com) 2014.\r\n\r\n#### [Personal](https://github.com/bakerface)\r\n**Hacker, Maker, Software Junkie, 1987-Now**\r\n- I spend several hours every day working on personal projects.\r\n- My favorite languages are x86 Assembly, C, C++, C#, Java, JavaScript, and Lisp.\r\n- I love to create my own languages and compilers (see [ion](https://github.com/bakerface/ion), [jsun](https://github.com/bakerface/jsun), and [ladder logic](https://github.com/bakerface/ll)).\r\n- I enjoy operating system development and browse [osdev](http://wiki.osdev.org) for inspiration.\r\n- I am always curious how things work and reverse engineering protocols to learn.\r\n- I am a [KISS](http://en.wikipedia.org/wiki/KISS_principle) purist, and think that everything should have a simple, reusable API.\r\n- Created a test-driven development framework for ANSI C and C++ called [jasmine](https://github.com/bakerface/jasmine).\r\n- Developing the [nitrus](https://github.com/bakerface/nitrus) C++ framework, [e3](https://github.com/bakerface/e3) C framework, and [jex](https://github.com/bakerface/nitrus) JavaScript package.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}